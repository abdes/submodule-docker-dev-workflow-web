server {
    listen       80;
    server_name  localhost;

    # If using virtualbox with docker, disable sendfile or updates to the host
    # files will not be visibile when serving static content with nginx
    #sendfile off;

    root   /usr/share/nginx/html;
    index  index.html index.htm;


    #charset koi8-r;

    # It's always good to set logs, note however you cannot turn off the error log
  	# setting error_log off; will simply create a file called 'off'.
  	#access_log /var/log/nginx/exmaple.com.access.log;
  	#error_log /var/log/nginx/example.com.error.log;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
    }

    location /css {
        alias /usr/share/nginx/html/assets/css/;
    }

    location /fonts {
        alias /usr/share/nginx/html/assets/fonts/;
    }

    location /images/ {
        alias /usr/share/nginx/html/assets/images/;
    }

    location /js/ {
        alias /usr/share/nginx/html/assets/js/;
    }

    # This block will catch static file requests, such as images, css, js
  	# The ?: prefix is a 'non-capturing' mark, meaning we do not require
  	# the pattern to be captured into $1 which should help improve performance
  	#location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
  		# Some basic cache-control for static files to be sent to the browser
  	#	expires max;
  	#	add_header Pragma public;
  	#	add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  	#}

    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}

    location = /robots.txt  { access_log off; log_not_found off; }
    location = /favicon.ico {
        alias /usr/share/nginx/html/assets/images/favicon.ico;
        access_log off; log_not_found off;
    }

    # this prevents hidden files (beginning with a period) from being served
  	location ~ /\.          { access_log off; log_not_found off; deny all; }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
